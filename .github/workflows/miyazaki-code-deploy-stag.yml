name: miyazaki-code-deploy-stag
on:
  pull_request:
    types: [closed]
    paths:
      - "services/miyazaki/code-deploy/**"

jobs:
  miyazaki-image-build-job-stag:
    runs-on: ubuntu-latest
    steps:
      - name: checkout public repo
        if: github.event.pull_request.merged == true
        uses: actions/checkout@v1.2.0

      - name: retag and push image to our Private Hub
        run: |
          export BRANCH_TAG=${BRANCH_NAME}
          export MASTER_TAG=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7 `
          make docker-retag-push
        env:
          DOCKER_TOKEN: ${{ secrets.QUAY_REGISTRY_TOKEN }}
          DOCKER_HOST 		: quay.io
          DOCKER_IMAGE 		: quay.io/hooq/miyazaki
          DOCKER_USERNAME	: hooq+techacc
          SSH_KEY: ${{ secrets.DEPLOYER_KEY_PRIV }}
          SSH_KEY_PUB: ${{ secrets.DEPLOYER_KEY_PUB }}
          MASTER_COMMIT_ID: ${{ toJson(github.event.pull_request.merge_commit_sha) }}
          BRANCH_NAME: ${{ toJson(github.head_ref) }}


      - name: docker image cleanup with branch_name
        run: |
          BRANCH_TAG=`printf $(tr -d '"' <<< $BRANCH_NAME)`
          REQUEST_URL="https://quay.io/api/v1/repository/hooq/miyazaki/tag/$BRANCH_TAG"
          curl -s -X DELETE $REQUEST_URL -H "Authorization: Bearer ${{ secrets.QUAY_ACCESS_TOKEN }}"
        env:
          BRANCH_NAME: ${{ toJson(github.head_ref) }}

  miyazaki-ecs-deployment-stag:
    runs-on: ubuntu-latest
    needs: miyazaki-image-build-job-stag
    steps:
      - name: checkout public repo
        uses: actions/checkout@master

      - name: Get the latest terraform version
        run: make terraform-install


      - name: apply terraform
        run: |
          export APP_TAG=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7` && sed -i -e "s/APP_TAG/$APP_TAG/g" *.tf
          make terraform-apply
        working-directory: services/miyazaki/code-deploy/
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: stag
          TF_TOKEN_CLOUD_SRE: ${{ secrets.TF_TOKEN_CLOUD_SRE }}
          TF_TOKEN_MIYAZAKI: ${{ secrets.TF_TOKEN_MIYAZAKI }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_STAG_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_STAG_SECRET_KEY }}
          MASTER_COMMIT_ID: ${{ toJson(github.event.pull_request.merge_commit_sha) }}

      - name: code promotion STAG to PROD
        if: github.event.pull_request.merged == true
        run:  |
          export PULL_REQUEST_COMMIT_ID_SHORT=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID" | cut -c1-7`
          echo "Commit id short is:  $PULL_REQUEST_COMMIT_ID_SHORT"
          export PULL_REQUEST_COMMIT_ID_FULL=`sed -e 's/^"//' -e 's/"$//' <<<"$MASTER_COMMIT_ID"`
          echo "Commit id full is: $PULL_REQUEST_COMMIT_ID_FULL"
          echo "--------------------------------------------------STAG->PROD--------------------------------------------------------------------------------------------------------------"
          echo "git fetch origin master"
          echo "Command to promote code to PROD is:   git tag -a MIYAZAKI-PROD-CODE-$PULL_REQUEST_COMMIT_ID_SHORT $PULL_REQUEST_COMMIT_ID_FULL -m \"Code Promotion from the STAG to PROD\""
          echo "Command to push Prod tags:  git push origin MIYAZAKI-PROD-CODE-$PULL_REQUEST_COMMIT_ID_SHORT"
        working-directory: services/miyazaki/code-deploy/
        env:
          MASTER_COMMIT_ID: ${{ toJson(github.event.pull_request.merge_commit_sha) }}
