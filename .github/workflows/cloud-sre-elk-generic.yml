name: cloud-sre-elk-generic
on:
  push:
    tags:
      - elk-generic-*
    paths:
      - 'cloud_sre/Ops_Collection/hooq-elasticsearch/vars/ilm/*.yml'
      - 'cloud_sre/Ops_Collection/hooq-elasticsearch/vars/spaces/*.yml'

jobs:
  elk-deployment-action:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout public repo
        uses: actions/checkout@master

      - name : Get the latest terraform version
        # run: wget `echo "https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version')/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version')_linux_amd64.zip"`  && unzip *.zip && sudo mv terraform /usr/bin/terraform
        run: curl -L -O https://releases.hashicorp.com/terraform/"$TF_STABLE_VERSION"/terraform_"$TF_STABLE_VERSION"_linux_amd64.zip && unzip *.zip && sudo mv terraform /usr/bin/terraform
        env:
          TF_STABLE_VERSION:  ${{ secrets.TF_STABLE_VERSION }}
          
      - name: Init and plan terraform for CLOUD-SRE generic work
        run: sed -i -e "s/TF_TOKEN_CLOUD_SRE/$TF_TOKEN_CLOUD_SRE/g" backend.tf && /usr/bin/terraform init -input=false  && /usr/bin/terraform plan -input=false
        working-directory: cloud_sre/elasticstack
        env:
          TF_IN_AUTOMATION: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SRE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SRE_SECRET_KEY }}
          TF_TOKEN_CLOUD_SRE: ${{ secrets.TF_TOKEN_CLOUD_SRE }}

      - name: Apply terraform for CLOUD-SRE generic work
        run:  /usr/bin/terraform apply -input=false -auto-approve
        working-directory: cloud_sre/elasticstack
        env:
          TF_IN_AUTOMATION: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SRE_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SRE_SECRET_KEY }}

      - name: Checkout public repo
        uses: actions/checkout@master

      - name: Create vault bash file for calling the vault password
        run: printf '%s\n' '#!/bin/bash' 'echo $ANSIBLE_VAULT_PASSWORD' > $HOME/vault_env  && chmod +x $HOME/vault_env
        
      - name: Run Playbook
        run: ansible-playbook playbook.yml -vvvvv --tags configilm,configspace,configroles,hooq-elastic-stack 
        working-directory: cloud_sre/Ops_Collection/hooq-elasticsearch
        env:
          ANSIBLE_VAULT_PASSWORD_FILE: $HOME/vault_env
          ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
