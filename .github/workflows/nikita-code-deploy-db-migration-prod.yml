name: nikita-code-deploy-db-migration-prod
on:
  push:
    tags:
      - nikita-db-migrate-prod-*
      - nikita-db-rollback-prod-*

jobs:
  nikita-code-deploy-db-migration-run-prod:
    runs-on: ubuntu-latest
    needs: nikita-code-deploy-db-migration-image-prod
    steps:
      - name: checkout public repo
        uses: actions/checkout@v2

      - if: startsWith(github.ref, 'refs/tags/nikita-db-migrate-prod-')
        name: apply terraform with migrate command
        run: make terraform-install terraform-apply
        working-directory: services/nikita/code-deploy/db_migration/terraform/
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: prod
          TF_TOKEN_CLOUD_SRE: ${{ secrets.TF_TOKEN_CLOUD_SRE }}
          TF_TOKEN_NIKITA: ${{ secrets.TF_TOKEN_NIKITA }}
          TF_VAR_db_migration_command: mix ecto.migrate
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_SECRET_KEY }}

      - if: startsWith(github.ref, 'refs/tags/nikita-db-rollback-prod-')
        name: apply terraform with rollback command
        run: make terraform-install terraform-apply
        working-directory: services/nikita/code-deploy/db_migration/terraform/
        env:
          TF_IN_AUTOMATION: true
          TF_WORKSPACE: prod
          TF_TOKEN_CLOUD_SRE: ${{ secrets.TF_TOKEN_CLOUD_SRE }}
          TF_TOKEN_NIKITA: ${{ secrets.TF_TOKEN_NIKITA }}
          TF_VAR_db_migration_command: mix ecto.rollback
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_SECRET_KEY }}
